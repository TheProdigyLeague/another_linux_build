# ███████╗███████╗██████╗          ██████╗██████╗ ██╗   ██╗██████╗ ████████╗
# ╚══███╔╝██╔════╝██╔══██╗        ██╔════╝██╔══██╗╚██╗ ██╔╝██╔══██╗╚══██╔══╝
#   ███╔╝ █████╗  ██║  ██║        ██║     ██████╔╝ ╚████╔╝ ██████╔╝   ██║   
#  ███╔╝  ██╔══╝  ██║  ██║        ██║     ██╔══██╗  ╚██╔╝  ██╔═══╝    ██║   
# ███████╗███████╗██████╔╝███████╗╚██████╗██║  ██║   ██║   ██║        ██║   
# ╚══════╝╚══════╝╚═════╝ ╚══════╝ ╚═════╝╚═╝  ╚═╝   ╚═╝   ╚═╝        ╚═╝   
- name: chck zed_free.bin
  stat:
    path: '/usr/bin/zed_free'
  register: zed_free_binary

- name: cp zed_encrypt archive --> rem_HOST
  when: zed_free_binary.stat.exists == false
  copy:
    src: 'files/ZEDFREE-2023.2.Ubuntu.amd64.zip'
    dest: '/opt/ZEDFREE-2023.2.Ubuntu.amd64.zip'
    mode: '0600'  # [SET] permissions for .deb fs

- name: => destination folder for unzipping
  when: zed_free_binary.stat.exists == false
  file:
    path: '/opt/zedencrypt'
    state: directory
    mode: '0755'

- name: Unzip zedencrypt archive
  when: zed_free_binary.stat.exists == false
  unarchive:
    src: '/opt/ZEDFREE-2023.2.Ubuntu.amd64.zip'
    dest: '/opt/zedencrypt'  # Destination folder for the unzipped contents

- name: Install zedencrypt using dpkg
  when: zed_free_binary.stat.exists == false
  shell: dpkg -i '/opt/zedencrypt/Ubuntu 22.04/ZEDFREE-2023.2.Ubuntu22.04.amd64.deb'
  become: true
  become_method: sudo
---
- name: "Check if already installed"
  stat:
    path: "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/"
  register: plugin_sugg

- name: "Install zsh-suggestions from git"
  shell:
    cmd: "git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions"
  when: plugin_sugg.stat.exists == False
---
- name: "Copy zshrc profile"
  copy:
    src: "{{ role_path }}/files/zshrc"
    dest: "{{ ansible_env.HOME }}/.zshrc"

- name: "Check if neofetch config directory exists"
  stat:
    path: /home/kali/.config/neofetch
  register: directory_info

- name: "Create neofetch config directory if it doesn't exist"
  file:
    path: "{{ ansible_env.HOME }}/.config/neofetch"
    state: directory
  when: not directory_info.stat.exists


- name: "Copy neofetch conf"
  copy:
    src: "{{ role_path }}/files/neofetch.conf"
    dest: "{{ ansible_env.HOME }}/.config/neofetch/config.conf"  
---
- name: "Copy zsh agnoster custom theme"
  copy:
    src: "{{ role_path }}/files/agnoster.zsh-theme"
    dest: "{{ ansible_env.HOME }}/.oh-my-zsh/themes/agnoster.zsh-theme"
# eof